#+TITLE: Using Adafruit FT232H Breakout in NixOS WSL
#+STARTUP: inlineimages
#+last_modified: 2023-08-21 22:15:48 alex
* Resources
- The board [[https://www.adafruit.com/product/2264][Adafruit FT232H Breakout - General Purpose USB to GPIO, SPI, I2C -  USB C & Stemma QT]]
- The chip  [[https://ftdichip.com/products/ft232hq/][FT232H -- Hi-Speed Single Channel USB UART/FIFO IC]]
- Examples https://learn.adafruit.com/circuitpython-on-any-computer-with-ft232h

* WSL USB
https://learn.microsoft.com/en-us/windows/wsl/connect-usb
#+begin_src sh :results verbatim
  /mnt/c/Program\ Files/usbipd-win/usbipd.exe wsl list
#+end_src

#+RESULTS:
: BUSID  VID:PID    DEVICE                                                        STATE
: 1-2    0403:6014  USB Serial Converter                                          Not attached
: 1-4    27c6:55b4  Goodix fingerprint SGX                                        Not attached
: 1-7    174f:2426  Integrated Camera                                             Not attached
: 1-10   8087:0aaa  Intel(R) Wireless Bluetooth(R)                                Not attached
:

#+name: busid
#+begin_src sh :results output
  /mnt/c/Program\ Files/usbipd-win/usbipd.exe wsl list | \
      grep 'USB Serial Converter' | \
      sed -E 's/^([0-9]+-[0-9]+).*/\1/'
#+end_src

#+RESULTS: busid
: 1-2

Run as Windows administrator for busid corresponding to "USB Serial Converter"
#+begin_src sh :eval no :var busid=busid
  usbipd wsl attach --busid $busid
#+end_src

#+begin_src sh :results verbatim
  lsusb | grep 0403
#+end_src

#+RESULTS:
: Bus 001 Device 002: ID 0403:6014 Future Technology Devices International, Ltd FT232H Single HS USB-UART/FIFO IC

* FTDI rules for libusb
Those needs to be added to =services.udev.extraRules=

#+begin_src sh :results verbatim
  grep 0403 /etc/udev/rules.d/99-local.rules
#+end_src

#+RESULTS:
: SUBSYSTEM=="usb", ATTR{idVendor}=="0403", ATTR{idProduct}=="6001", GROUP="plugdev", MODE="0666"
: SUBSYSTEM=="usb", ATTR{idVendor}=="0403", ATTR{idProduct}=="6011", GROUP="plugdev", MODE="0666"
: SUBSYSTEM=="usb", ATTR{idVendor}=="0403", ATTR{idProduct}=="6010", GROUP="plugdev", MODE="0666"
: SUBSYSTEM=="usb", ATTR{idVendor}=="0403", ATTR{idProduct}=="6014", GROUP="plugdev", MODE="0666"
: SUBSYSTEM=="usb", ATTR{idVendor}=="0403", ATTR{idProduct}=="6015", GROUP="plugdev", MODE="0666"
* FTDI test

https://en.wikipedia.org/wiki/FTDI

https://eblot.github.io/pyftdi/

#+begin_src python :results verbatim
  from pyftdi.ftdi import Ftdi
  Ftdi().open_from_url('ftdi:///?')
#+end_src

Or use the script shipped with pyftdi:

#+begin_src sh :results output
  ftdi_urls.py --verbose
#+end_src
#+RESULTS:
: Available interfaces:
:   ftdi://ftdi:232h:1/1   (￿￿￿￿￿￿)
:
* Pinout
https://learn.adafruit.com/circuitpython-on-any-computer-with-ft232h/pinouts
* Adafruit Blinka
This repository contains a selection of packages emulating the CircuitPython API for devices or hosts running CPython or MicroPython.
https://github.com/adafruit/Adafruit_Blinka/
* LED
https://learn.adafruit.com/circuitpython-on-any-computer-with-ft232h/gpio
#+begin_src python :results value
  import time
  # Adafruit Blinka modules
  import board
  import digitalio

  led = digitalio.DigitalInOut(board.C0)
  led.direction = digitalio.Direction.OUTPUT

  for i in range(10):
      led.value = True
      time.sleep(0.5)
      led.value = False
      time.sleep(0.5)
#+end_src

#+RESULTS:
: None
* org configuration
# Local Variables:
# eval: (add-hook 'before-save-hook 'time-stamp nil t)
# time-stamp-active: t
# End:
